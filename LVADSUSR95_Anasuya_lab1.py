# -*- coding: utf-8 -*-
"""lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16O7GCWTc0i3SyDnmEXX4n_M0d9fj-ZOf
"""

#1
import pandas as pd
data = pd.read_csv("/content/expenses.csv")
print(data.info())
data = data.dropna()
data = data.drop_duplicates()

print(data)

columns_to_encode = ['sex','smoker','region']
data= pd.get_dummies(data, columns=columns_to_encode)
print(data.head())

#3

X = data.drop('charges', axis='columns') ## Training Data
print(X)
y = data.charges ## Test data(label)
print(y)

#4
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, test_size = .5)

#6
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error  # Add this line to import mean_squared_error
import warnings
warnings.filterwarnings("ignore")
import numpy as np


# Assuming X and y are your features and target variable respectively
# Replace X and y with your actual feature and target data


# Create a linear regression model
model = LinearRegression()

# Fit the model to the data
model.fit(X, y)

# Make predictions
predictions = model.predict(X)

# Calculate mean squared error
mse = mean_squared_error(y, predictions)
# Calculate root mean squared error
rmse = np.sqrt(mse)




# Print the mean squared error
print("Mean Squared Error:", mse)
print("Root Mean Squared Error:", rmse)

# Calculate and print the R-squared score
print("R-squared Score:", model.score(X, y))